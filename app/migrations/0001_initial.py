# Generated by Django 4.0 on 2022-02-28 06:31

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LabOrders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('deadline', models.DateTimeField()),
                ('subject', models.CharField(max_length=20)),
                ('lab_manual', models.FileField(blank=True, null=True, upload_to='')),
                ('lab_data', models.FileField(blank=True, null=True, upload_to='')),
                ('report_guidline', models.FileField(blank=True, null=True, upload_to='')),
                ('reference_material', models.FileField(blank=True, null=True, upload_to='')),
                ('status', models.CharField(choices=[('Awaiting Confirmation', 'Awaiting Confirmation'), ('Order Confimed', 'Order Confimed'), ('Order Rejected', 'Order Rejected'), ('Assignment In Progress', 'Assignment In Progress'), ('Review Your Assignment', 'Review Your Assignment'), ('Assignment Under Revision', 'Assignment Under Revision'), ('Assignment Completed', 'Assignment Completed')], max_length=100)),
                ('submission_date', models.DateField(default=datetime.date(2022, 2, 28))),
                ('assigned', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('subject', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=500, null=True)),
                ('deadline', models.DateTimeField()),
                ('assignment', models.FileField(blank=True, null=True, upload_to='')),
                ('duration', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('Awaiting Confirmation', 'Awaiting Confirmation'), ('Order Confimed', 'Order Confimed'), ('Order Rejected', 'Order Rejected'), ('Assignment In Progress', 'Assignment In Progress'), ('Review Your Assignment', 'Review Your Assignment'), ('Assignment Under Revision', 'Assignment Under Revision'), ('Assignment Completed', 'Assignment Completed')], max_length=100)),
                ('submission_date', models.DateField(default=datetime.date(2022, 2, 28))),
                ('assigned', models.BooleanField(default=False)),
                ('reference_material', models.ImageField(blank=True, null=True, upload_to='')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.FileField(upload_to='')),
                ('subject', models.CharField(choices=[('Physics', 'Physics'), ('Maths', 'Maths'), ('Essay Writing', 'Essay Writing'), ('Chemistry', 'Chemistry'), ('Accounting', 'Accounting'), ('Economics', 'Economics'), ('Management', 'Management'), ('Biology', 'Biology'), ('Chemical Engineering', 'Chemical Engineering'), ('Computer Science', 'Computer Science'), ('Nursing', 'Nursing'), ('Electrical', 'Electrical'), ('Mechanical', 'Mechanical'), ('Finance', 'Finance'), ('Civil Engineering', 'Civil Engineering')], max_length=100)),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('Student', 'Student'), ('Tutor', 'Tutor')], max_length=100)),
                ('profile', models.ImageField(blank=True, null=True, upload_to='')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('study_level', models.CharField(max_length=100, null=True)),
                ('assignment_reference_style', models.CharField(max_length=20, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
            ],
            options={
                'verbose_name': 'User_Detail',
                'verbose_name_plural': 'User Details',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TutorRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=13, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=60, null=True)),
                ('pin', models.IntegerField(blank=True, null=True)),
                ('qualification_level', models.CharField(max_length=100)),
                ('degree', models.CharField(blank=True, max_length=100, null=True)),
                ('branch', models.CharField(blank=True, max_length=100, null=True)),
                ('college', models.CharField(blank=True, max_length=200, null=True)),
                ('college_id', models.FileField(blank=True, null=True, upload_to='')),
                ('subject', models.CharField(max_length=40)),
                ('tutor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
            ],
            options={
                'verbose_name': 'Tutor Register',
                'verbose_name_plural': 'Tutor Registers',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TutorPaymenyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(blank=True, max_length=10, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('account', models.CharField(blank=True, max_length=10, null=True)),
                ('tds', models.CharField(blank=True, max_length=4, null=True)),
                ('status', models.CharField(blank=True, max_length=4, null=True)),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tutorregister')),
            ],
            options={
                'verbose_name': 'Tutor Payment Detail',
                'verbose_name_plural': 'Tutor Payment Details',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TutorEarnedDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=40, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tutorregister')),
            ],
            options={
                'verbose_name': 'Tutor Earned Detail',
                'verbose_name_plural': 'Tutor Earned Details',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TutorBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.IntegerField()),
                ('tutor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.tutorregister')),
            ],
            options={
                'verbose_name': 'Balance',
                'verbose_name_plural': 'Balances',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TutorAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pan_number', models.CharField(blank=True, max_length=20, null=True)),
                ('name_on_pan', models.CharField(blank=True, max_length=100, null=True)),
                ('name_in_account', models.CharField(blank=True, max_length=100, null=True)),
                ('account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('ifsc', models.CharField(blank=True, max_length=20, null=True)),
                ('tutor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.tutorregister')),
            ],
            options={
                'verbose_name': 'Account Detail',
                'verbose_name_plural': 'Account Details',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1000)),
                ('rating', models.CharField(max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TutorSolvedLabs',
            fields=[
                ('labs', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='app.laborders')),
                ('amount', models.IntegerField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], default='Pending', max_length=30)),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tutorregister')),
            ],
            options={
                'verbose_name': 'Tutor Solved lab',
                'verbose_name_plural': 'Tutor Solved labs',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TutorSolvedAssignment',
            fields=[
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='app.orders')),
                ('amount', models.IntegerField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], default='Pending', max_length=30)),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tutorregister')),
            ],
            options={
                'verbose_name': 'Tutor Solved Assignment',
                'verbose_name_plural': 'Tutor Solved Assignments',
                'db_table': '',
                'managed': True,
            },
        ),
    ]
